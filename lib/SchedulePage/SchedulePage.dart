// schedule_page.dart
import 'package:flutter/material.dart';

class SchedulePage extends StatelessWidget {
  const SchedulePage({Key? key}) : super(key: key);

  // ุฌุฏูู ุงููุจุงุฑูุงุช ุงููุงูู
  final List<Map<String, dynamic>> matches = const [
    {
      "date": "21 ุฏูุณูุจุฑ 2025",
      "time": "20:00",
      "team1": "ุงููุบุฑุจ",
      "team2": "ุฌุฒุฑ ุงูููุฑ",
      "stadium": "ููุนุจ ุงูุฃููุฑ ูููุงู ุนุจุฏ ุงูููุ ุงูุฑุจุงุท",
    },
    {
      "date": "22 ุฏูุณูุจุฑ 2025",
      "time": "15:30",
      "team1": "ูุงูู",
      "team2": "ุฒุงูุจูุง",
      "stadium": "ููุนุจ ูุญูุฏ ุงูุฎุงูุณุ ุงูุฏุงุฑ ุงูุจูุถุงุก",
    },
    {
      "date": "22 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ูุตุฑ",
      "team2": "ุฒููุจุงุจูู",
      "stadium": "ููุนุจ ุฃุฏุฑุงุฑุ ุฃูุงุฏูุฑ",
    },
    {
      "date": "22 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุฌููุจ ุฅูุฑูููุง",
      "team2": "ุฃูุบููุง",
      "stadium": "ููุนุจ ูุฑุงูุดุ ูุฑุงูุด",
    },
    {
      "date": "23 ุฏูุณูุจุฑ 2025",
      "time": "13:00",
      "team1": "ููุฌูุฑูุง",
      "team2": "ุชูุฒุงููุง",
      "stadium": "ููุนุจ ูุงุณุ ูุงุณ",
    },
    {
      "date": "23 ุฏูุณูุจุฑ 2025",
      "time": "15:30",
      "team1": "ุชููุณ",
      "team2": "ุฃูุบูุฏุง",
      "stadium": "ุงูููุนุจ ุงูุฃูููุจู ุงูููุญูุ ุงูุฑุจุงุท",
    },
    {
      "date": "23 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ุงูุณูุบุงู",
      "team2": "ุจูุชุณูุงูุง",
      "stadium": "ููุนุจ ุงุจู ุจุทูุทุฉุ ุทูุฌุฉ",
    },
    {
      "date": "23 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุงููููุบู DR",
      "team2": "ุจููู",
      "stadium": "ููุนุจ ุงูุจุฑูุฏุ ุงูุฑุจุงุท",
    },
    {
      "date": "24 ุฏูุณูุจุฑ 2025",
      "time": "13:00",
      "team1": "ุงูุฌุฒุงุฆุฑ",
      "team2": "ุงูุณูุฏุงู",
      "stadium": "ููุนุจ ูููุงู ุงูุญุณูุ ุงูุฑุจุงุท",
    },
    {
      "date": "24 ุฏูุณูุจุฑ 2025",
      "time": "15:30",
      "team1": "ุจูุฑูููุง ูุงุณู",
      "team2": "ุบูููุง ุงูุงุณุชูุงุฆูุฉ",
      "stadium": "ููุนุจ ูุญูุฏ ุงูุฎุงูุณุ ุงูุฏุงุฑ ุงูุจูุถุงุก",
    },
    {
      "date": "24 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ุณุงุญู ุงูุนุงุฌ",
      "team2": "ููุฒูุจูู",
      "stadium": "ููุนุจ ูุฑุงูุดุ ูุฑุงูุด",
    },
    {
      "date": "24 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุงููุงููุฑูู",
      "team2": "ุงูุบุงุจูู",
      "stadium": "ููุนุจ ุฃุฏุฑุงุฑุ ุฃูุงุฏูุฑ",
    },
    {
      "date": "26 ุฏูุณูุจุฑ 2025",
      "time": "13:00",
      "team1": "ุงููุบุฑุจ",
      "team2": "ูุงูู",
      "stadium": "ููุนุจ ุงูุฃููุฑ ูููุงู ุนุจุฏ ุงูููุ ุงูุฑุจุงุท",
    },
    {
      "date": "26 ุฏูุณูุจุฑ 2025",
      "time": "15:30",
      "team1": "ุฒุงูุจูุง",
      "team2": "ุฌุฒุฑ ุงูููุฑ",
      "stadium": "ููุนุจ ูุญูุฏ ุงูุฎุงูุณุ ุงูุฏุงุฑ ุงูุจูุถุงุก",
    },
    {
      "date": "26 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ูุตุฑ",
      "team2": "ุฌููุจ ุฅูุฑูููุง",
      "stadium": "ููุนุจ ุฃุฏุฑุงุฑุ ุฃูุงุฏูุฑ",
    },
    {
      "date": "26 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุฃูุบููุง",
      "team2": "ุฒููุจุงุจูู",
      "stadium": "ููุนุจ ูุฑุงูุดุ ูุฑุงูุด",
    },
    {
      "date": "27 ุฏูุณูุจุฑ 2025",
      "time": "13:00",
      "team1": "ููุฌูุฑูุง",
      "team2": "ุชููุณ",
      "stadium": "ููุนุจ ูุงุณุ ูุงุณ",
    },
    {
      "date": "27 ุฏูุณูุจุฑ 2025",
      "time": "15:30",
      "team1": "ุฃูุบูุฏุง",
      "team2": "ุชูุฒุงููุง",
      "stadium": "ููุนุจ ุงูุจุฑูุฏุ ุงูุฑุจุงุท",
    },
    {
      "date": "27 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ุงูุณูุบุงู",
      "team2": "ุงููููุบู DR",
      "stadium": "ููุนุจ ุงุจู ุจุทูุทุฉุ ุทูุฌุฉ",
    },
    {
      "date": "27 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุจููู",
      "team2": "ุจูุชุณูุงูุง",
      "stadium": "ุงูููุนุจ ุงูุฃูููุจู ุงูููุญูุ ุงูุฑุจุงุท",
    },
    {
      "date": "28 ุฏูุณูุจุฑ 2025",
      "time": "13:00",
      "team1": "ุงูุฌุฒุงุฆุฑ",
      "team2": "ุจูุฑูููุง ูุงุณู",
      "stadium": "ููุนุจ ูููุงู ุงูุญุณูุ ุงูุฑุจุงุท",
    },
    {
      "date": "28 ุฏูุณูุจุฑ 2025",
      "time": "15:30",
      "team1": "ุบูููุง ุงูุงุณุชูุงุฆูุฉ",
      "team2": "ุงูุณูุฏุงู",
      "stadium": "ููุนุจ ูุญูุฏ ุงูุฎุงูุณุ ุงูุฏุงุฑ ุงูุจูุถุงุก",
    },
    {
      "date": "28 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ุณุงุญู ุงูุนุงุฌ",
      "team2": "ุงููุงููุฑูู",
      "stadium": "ููุนุจ ูุฑุงูุดุ ูุฑุงูุด",
    },
    {
      "date": "28 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุงูุบุงุจูู",
      "team2": "ููุฒูุจูู",
      "stadium": "ููุนุจ ุฃุฏุฑุงุฑุ ุฃูุงุฏูุฑ",
    },
    {
      "date": "29 ุฏูุณูุจุฑ 2025",
      "time": "18:30",
      "team1": "ุฒุงูุจูุง",
      "team2": "ุงููุบุฑุจ",
      "stadium": "ููุนุจ ุงูุฃููุฑ ูููุงู ุนุจุฏ ุงูููุ ุงูุฑุจุงุท",
    },
    {
      "date": "29 ุฏูุณูุจุฑ 2025",
      "time": "18:30",
      "team1": "ุฌุฒุฑ ุงูููุฑ",
      "team2": "ูุงูู",
      "stadium": "ููุนุจ ูุญูุฏ ุงูุฎุงูุณุ ุงูุฏุงุฑ ุงูุจูุถุงุก",
    },
    {
      "date": "29 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุฃูุบููุง",
      "team2": "ูุตุฑ",
      "stadium": "ููุนุจ ุฃุฏุฑุงุฑุ ุฃูุงุฏูุฑ",
    },
    {
      "date": "29 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุฒููุจุงุจูู",
      "team2": "ุฌููุจ ุฅูุฑูููุง",
      "stadium": "ููุนุจ ูุฑุงูุดุ ูุฑุงูุด",
    },
    {
      "date": "30 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ุฃูุบูุฏุง",
      "team2": "ููุฌูุฑูุง",
      "stadium": "ููุนุจ ูุงุณุ ูุงุณ",
    },
    {
      "date": "30 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ุชูุฒุงููุง",
      "team2": "ุชููุณ",
      "stadium": "ุงูููุนุจ ุงูุฃูููุจู ุงูููุญูุ ุงูุฑุจุงุท",
    },
    {
      "date": "30 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุจููู",
      "team2": "ุงูุณูุบุงู",
      "stadium": "ููุนุจ ุงุจู ุจุทูุทุฉุ ุทูุฌุฉ",
    },
    {
      "date": "30 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุจูุชุณูุงูุง",
      "team2": "ุงููููุบู DR",
      "stadium": "ููุนุจ ุงูุจุฑูุฏุ ุงูุฑุจุงุท",
    },
    {
      "date": "31 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ุบูููุง ุงูุงุณุชูุงุฆูุฉ",
      "team2": "ุงูุฌุฒุงุฆุฑ",
      "stadium": "ููุนุจ ูููุงู ุงูุญุณูุ ุงูุฑุจุงุท",
    },
    {
      "date": "31 ุฏูุณูุจุฑ 2025",
      "time": "18:00",
      "team1": "ุงูุณูุฏุงู",
      "team2": "ุจูุฑูููุง ูุงุณู",
      "stadium": "ููุนุจ ูุญูุฏ ุงูุฎุงูุณุ ุงูุฏุงุฑ ุงูุจูุถุงุก",
    },
    {
      "date": "31 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ุงูุบุงุจูู",
      "team2": "ุณุงุญู ุงูุนุงุฌ",
      "stadium": "ููุนุจ ูุฑุงูุดุ ูุฑุงูุด",
    },
    {
      "date": "31 ุฏูุณูุจุฑ 2025",
      "time": "20:30",
      "team1": "ููุฒูุจูู",
      "team2": "ุงููุงููุฑูู",
      "stadium": "ููุนุจ ุฃุฏุฑุงุฑุ ุฃูุงุฏูุฑ",
    },
  ];

  // ุชุฌููุน ุงููุจุงุฑูุงุช ุญุณุจ ุงูููู
  Map<String, List<Map<String, dynamic>>> _groupByDate() {
    final grouped = <String, List<Map<String, dynamic>>>{};
    for (var m in matches) {
      grouped.putIfAbsent(m["date"] as String, () => []).add(m);
    }
    return grouped;
  }

  @override
  Widget build(BuildContext context) {
    final messenger = ScaffoldMessenger.of(context);
    final grouped = _groupByDate();
    final days = grouped.keys.toList()..sort();

    return Scaffold(
      appBar: AppBar(
        title: const Text("๐ ุชูููุช ุงููุจุงุฑูุงุช"),
        centerTitle: true,
        backgroundColor: const Color(0xff006633),
      ),
      body: ListView.builder(
        padding: const EdgeInsets.all(12),
        itemCount: days.length,
        itemBuilder: (context, i) {
          final day = days[i];
          final dayMatches = grouped[day]!;
          return Card(
            clipBehavior: Clip.antiAlias,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(16),
            ),
            margin: const EdgeInsets.only(bottom: 16),
            child: Padding(
              padding: const EdgeInsets.all(12),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  // ุนููุงู ุงูููู
                  Text(
                    day,
                    style: const TextStyle(
                      fontSize: 18,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  const SizedBox(height: 8),
                  // ุงููุจุงุฑูุงุช
                  ...dayMatches.map((m) => _matchTile(m)),
                ],
              ),
            ),
          );
        },
      ),
    );
  }

  Widget _matchTile(Map<String, dynamic> match) {
    return Builder(
      builder: (ctx) => Padding(
        padding: const EdgeInsets.symmetric(vertical: 6),
        child: Row(
          children: [
            // ุงูููุช
            Container(
              padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 4),
              decoration: BoxDecoration(
                color: const Color(0xffc8102e),
                borderRadius: BorderRadius.circular(8),
              ),
              child: Text(
                match["time"] as String,
                style: const TextStyle(
                  fontSize: 12,
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                ),
              ),
            ),
            const SizedBox(width: 12),
            // ุงููุฑููุงู
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    "${match["team1"]}  ุถุฏ  ${match["team2"]}",
                    style: const TextStyle(
                      fontSize: 14,
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                  Text(
                    match["stadium"] as String,
                    style: const TextStyle(fontSize: 11, color: Colors.grey),
                  ),
                ],
              ),
            ),
            IconButton(
              icon: const Icon(Icons.calendar_today, size: 18),
              onPressed: () {
                ScaffoldMessenger.of(ctx).showSnackBar(
                  SnackBar(
                    content: Text(
                      "โ ุชู ูุณุฎ ูุจุงุฑุงุฉ ${match["team1"]} vs ${match["team2"]}",
                    ),
                    duration: const Duration(seconds: 2),
                  ),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}
